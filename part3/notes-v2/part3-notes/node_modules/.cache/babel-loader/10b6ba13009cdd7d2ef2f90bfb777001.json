{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js\";\nimport React, { useState } from 'react';\nimport Country from './Country.js';\n\nconst DisplayCountries = ({\n  countries\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shownCountry = _useState2[0],\n        setShownCountry = _useState2[1];\n\n  if (countries.length > 10) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Too Many matches, please refine your query\");\n  if (countries.length === 0) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Your search does not match any countries\");\n  if (countries.length === 1) return React.createElement(Country, {\n    country: countries[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n\n  const handleButton = (country, index) => () => {\n    console.log(country, index);\n    setShownCountry(country);\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, countries.map((country, index) => {\n    return React.createElement(\"li\", {\n      key: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, country.name), React.createElement(\"button\", {\n      onClick: handleButton(country, index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Show\"));\n  }));\n};\n\nexport default DisplayCountries;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js"],"names":["React","useState","Country","DisplayCountries","countries","shownCountry","setShownCountry","length","handleButton","country","index","console","log","map","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA,oBACCH,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAC/BI,YAD+B;AAAA,QAClBC,eADkB;;AAGtC,MAAGF,SAAS,CAACG,MAAV,GAAmB,EAAtB,EAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAP;AAC1B,MAAGH,SAAS,CAACG,MAAV,KAAqB,CAAxB,EAA2B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AAC3B,MAAGH,SAAS,CAACG,MAAV,KAAqB,CAAxB,EAA2B,OAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,SAAS,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAE3B,QAAMI,YAAY,GAAG,CAACC,OAAD,EAASC,KAAT,KAAmB,MAAM;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAoBC,KAApB;AACAJ,IAAAA,eAAe,CAACG,OAAD,CAAf;AACH,GAHD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQL,SAAS,CAACS,GAAV,CAAc,CAACJ,OAAD,EAASC,KAAT,KAAmB;AAC7B,WACI;AAAI,MAAA,GAAG,EAAED,OAAO,CAACK,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIL,OAAO,CAACK,IAAZ,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAEN,YAAY,CAACC,OAAD,EAASC,KAAT,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH,GAPD,CAFR,CADJ;AAcH,CAzBD;;AA2BA,eAAeP,gBAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport Country from './Country.js'\n\nconst DisplayCountries = ({countries}) => {\n    const [shownCountry,setShownCountry] = useState([])\n\n    if(countries.length > 10) return <p>Too Many matches, please refine your query</p>\n    if(countries.length === 0) return <p>Your search does not match any countries</p>\n    if(countries.length === 1) return <Country country={countries[0]} />\n    \n    const handleButton = (country,index) => () => {\n        console.log(country,index)\n        setShownCountry(country)\n    }\n    return (\n        <ul>\n            {\n                countries.map((country,index) => {\n                    return (\n                        <li key={country.name}>\n                            <p>{country.name}</p>\n                            <button onClick={handleButton(country,index)}>Show</button>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default DisplayCountries"]},"metadata":{},"sourceType":"module"}