{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/b_lecture/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/b_lecture/src/components/App.js\";\nimport React, { useState } from 'react';\nimport Note from './Note';\n\nconst App = props => {\n  const _useState = useState(props.notes),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('Type here'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const rows = () => notes.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n\n  const addNote = event => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChaage: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/b_lecture/src/components/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","newNote","setNewNote","rows","map","note","id","addNote","event","preventDefault","console","log","target","handleNoteChange","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAACG,KAAK,CAACC,KAAP,CADb;AAAA;AAAA,QACdA,KADc;AAAA,QACPC,QADO;;AAAA,qBAESL,QAAQ,CAAC,WAAD,CAFjB;AAAA;AAAA,QAEdM,OAFc;AAAA,QAELC,UAFK;;AAGrB,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAC/B,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;;AAMA,QAAME,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,KAAK,CAACI,MAApC;AACD,GAHD;;AAIA,QAAMC,gBAAgB,GAAIL,KAAD,IAAW;AAClCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaE,KAAzB;AACAZ,IAAAA,UAAU,CAACM,KAAK,CAACI,MAAN,CAAaE,KAAd,CAAV;AACD,GAHD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,EADP,CAFF,EAKE;AAAM,IAAA,QAAQ,EAAEI,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAIN,OAAhB;AAAyB,IAAA,QAAQ,EAAEY,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CALF,CADF;AAYD,CA7BD;;AA+BA,eAAehB,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Note from './Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('Type here')\n  const rows = () => notes.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n    />\n  )\n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value = {newNote} onChaage={handleNoteChange}/>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}