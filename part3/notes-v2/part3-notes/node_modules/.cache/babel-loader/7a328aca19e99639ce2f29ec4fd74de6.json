{"ast":null,"code":"import _objectSpread from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/Components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './DisplayPersons';\nimport './DisplayFilter';\nimport './Form';\nimport DisplayPersons from './DisplayPersons';\nimport DisplayFilter from './DisplayFilter';\nimport Form from './Form';\nimport ErrorDisplay from './ErrorDisplay';\nimport personService from '../Services/persons';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchString = _useState8[0],\n        setSearchString = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        errorMessage = _useState10[0],\n        setErrorMessage = _useState10[1];\n\n  const addEntry = event => {\n    event.preventDefault();\n\n    if (newName === '') {\n      alert(\"You must enter a name\");\n      return;\n    }\n\n    if (persons.map(a => a.name).includes(newName)) {\n      if (window.confirm(`The name ${newName} is already present in the phonebook.\\nDo you want to update the number?`)) {\n        personService.updatePerson(persons.filter(a => a.name === newName)[0], newNumber).then(retval => {\n          if (retval !== 0) {\n            setErrorMessage(\"An error occured while contacting the server.\\nPlease try again.\");\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 3000);\n          } else {\n            setErrorMessage(\"Successfully updated number.\"); //Yes, it's not actually an error message. Sue me.\n\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 2000);\n          }\n        });\n        setPersons(persons.map(person => person.name !== newName ? person : _objectSpread({}, person, {\n          number: newNumber\n        })));\n        setNewName('');\n        setNewNumber('');\n      }\n\n      return;\n    }\n\n    let newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    personService.addPerson(newPerson).then(retval => {\n      if (retval !== 0) {\n        setErrorMessage(\"An error occured while contacting the server.\\nPlease try again.\");\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      } else {\n        setErrorMessage(\"Successfully added entry.\"); //Yes, it's not actually an error message. Sue me.\n\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      }\n    });\n    setPersons(persons.concat(newPerson));\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const deleteEntry = person => () => {\n    if (window.confirm(`Really delete ${person.name}?`) !== true) return;\n    personService.deletePerson(person).then(retval => {\n      if (retval !== 0) {\n        setErrorMessage(\"An error occured while attempting to delete the entry.\\nThe entry might have already been deleted.\");\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      }\n    });\n    setPersons(persons.filter(currentPerson => currentPerson.name !== person.name));\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearchString(event.target.value);\n  };\n\n  useEffect(() => {\n    personService.getAll().then(data => {\n      setPersons(data);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ErrorDisplay, {\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Add Entry\"), React.createElement(Form, {\n    onSubmit: addEntry,\n    fields: [{\n      description: 'name',\n      value: newName,\n      onChange: handleNameChange\n    }, {\n      description: 'number',\n      value: newNumber,\n      onChange: handleNumberChange\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    value: searchString,\n    onChange: handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(DisplayFilter, {\n    persons: persons,\n    searchString: searchString,\n    deletePerson: deleteEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(DisplayPersons, {\n    persons: persons,\n    deletePerson: deleteEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/Components/App.js"],"names":["React","useState","useEffect","DisplayPersons","DisplayFilter","Form","ErrorDisplay","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchString","setSearchString","errorMessage","setErrorMessage","addEntry","event","preventDefault","alert","map","a","name","includes","window","confirm","updatePerson","filter","then","retval","setTimeout","person","number","newPerson","addPerson","concat","deleteEntry","deletePerson","currentPerson","handleNameChange","target","value","handleNumberChange","handleSearchChange","getAll","data","description","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './DisplayPersons'\nimport './DisplayFilter'\nimport './Form'\nimport DisplayPersons from './DisplayPersons'\nimport DisplayFilter from './DisplayFilter'\nimport Form from './Form'\nimport ErrorDisplay from './ErrorDisplay'\n\nimport personService from '../Services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchString, setSearchString ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const addEntry = (event) => {\n    event.preventDefault()\n    if(newName === ''){\n      alert(\"You must enter a name\")\n      return\n    } \n    if(persons.map(a => a.name).includes(newName)){\n      if (window.confirm(`The name ${newName} is already present in the phonebook.\\nDo you want to update the number?`)){\n        personService\n          .updatePerson(persons.filter(a => a.name === newName)[0],newNumber)\n          .then(retval => {\n            if(retval !== 0){\n              setErrorMessage(\"An error occured while contacting the server.\\nPlease try again.\")\n              setTimeout(() => {\n                setErrorMessage(null)\n              },3000)\n            }else{\n              setErrorMessage(\"Successfully updated number.\") //Yes, it's not actually an error message. Sue me.\n              setTimeout(() => {\n                setErrorMessage(null)\n              },2000)\n            }\n          })\n        setPersons(persons.map(person => person.name !== newName ? person : {...person,number:newNumber}))\n        setNewName('');\n        setNewNumber('');\n      }\n      return\n    }\n    let newPerson = {name: newName, number: newNumber};\n    personService\n      .addPerson(newPerson)\n      .then(retval => {\n        if(retval !== 0){\n          setErrorMessage(\"An error occured while contacting the server.\\nPlease try again.\")\n              setTimeout(() => {\n                setErrorMessage(null)\n              },3000)\n        }else{\n          setErrorMessage(\"Successfully added entry.\") //Yes, it's not actually an error message. Sue me.\n          setTimeout(() => {\n            setErrorMessage(null)\n          },2000)\n        }\n      })\n    setPersons(persons.concat(newPerson))\n    setNewName('');\n    setNewNumber('');\n  }\n  const deleteEntry = (person) => () => {\n    if(window.confirm(`Really delete ${person.name}?`) !== true) return\n    personService\n      .deletePerson(person)\n      .then(retval => {\n        if(retval !== 0){\n          setErrorMessage(\"An error occured while attempting to delete the entry.\\nThe entry might have already been deleted.\")\n          setTimeout(() => {\n            setErrorMessage(null)\n          },2000)\n        }\n      })\n      setPersons(persons.filter(currentPerson => currentPerson.name !== person.name))\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setSearchString(event.target.value)\n  }\n  \n  useEffect(() => {\n    personService\n      .getAll()\n        .then(data => {\n          setPersons(data)\n        })\n  },[])\n\n  return (\n    <div>\n      <ErrorDisplay errorMessage={errorMessage} />\n      <h2>Phonebook</h2>\n      <h3>Add Entry</h3>\n      <Form onSubmit={addEntry} fields={\n        [\n          {description: 'name',value: newName,onChange: handleNameChange},\n          {description: 'number',value: newNumber,onChange: handleNumberChange}\n        ]\n      } />\n      <h3>Search</h3>\n      <input value={searchString} onChange={handleSearchChange}/>\n      <DisplayFilter persons={persons} searchString={searchString} deletePerson={deleteEntry}/>\n      <h3>Numbers</h3>\n      <DisplayPersons persons={persons} deletePerson={deleteEntry}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}