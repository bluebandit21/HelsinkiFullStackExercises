{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/Components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './DisplayPersons';\nimport './DisplayFilter';\nimport './Form';\nimport DisplayPersons from './DisplayPersons';\nimport DisplayFilter from './DisplayFilter';\nimport Form from './Form';\nimport personService from '../Services/persons';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchString = _useState8[0],\n        setSearchString = _useState8[1];\n\n  const addEntry = event => {\n    event.preventDefault();\n\n    if (newName === '') {\n      alert(\"You must enter a name\");\n      return;\n    }\n\n    if (persons.map(a => a.name).includes(newName)) {\n      if (confirm(`The name ${newName} is already present in the phonebook.\\nDo you want to update the number?`)) {\n        personService.updatePerson(persons.filter(a => a.name == newName));\n      }\n\n      return;\n    }\n\n    let newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    personService.addPerson(newPerson).then(retval => {\n      if (retval !== 0) {\n        alert(\"An error occured while contacting the server.\\nPlease try again.\");\n      }\n    });\n    setPersons(persons.concat(newPerson));\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const deleteEntry = person => () => {\n    if (window.confirm(`Really delete ${person.name}?`) !== true) return;\n    personService.deletePerson(person).then(retval => {\n      if (retval !== 0) {\n        alert(\"An error occured while attempting to delete the entry.\\nThe entry might have already been deleted.\");\n      }\n    });\n    setPersons(persons.filter(currentPerson => currentPerson.name !== person.name));\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearchString(event.target.value);\n  };\n\n  useEffect(() => {\n    personService.getAll().then(data => {\n      setPersons(data);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Add Entry\"), React.createElement(Form, {\n    onSubmit: addEntry,\n    fields: [{\n      description: 'name',\n      value: newName,\n      onChange: handleNameChange\n    }, {\n      description: 'number',\n      value: newNumber,\n      onChange: handleNumberChange\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    value: searchString,\n    onChange: handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(DisplayFilter, {\n    persons: persons,\n    searchString: searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(DisplayPersons, {\n    persons: persons,\n    deletePerson: deleteEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/Components/App.js"],"names":["React","useState","useEffect","DisplayPersons","DisplayFilter","Form","personService","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchString","setSearchString","addEntry","event","preventDefault","alert","map","a","name","includes","confirm","updatePerson","filter","newPerson","number","addPerson","then","retval","concat","deleteEntry","person","window","deletePerson","currentPerson","handleNameChange","target","value","handleNumberChange","handleSearchChange","getAll","data","description","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport './DisplayPersons'\nimport './DisplayFilter'\nimport './Form'\nimport DisplayPersons from './DisplayPersons'\nimport DisplayFilter from './DisplayFilter'\nimport Form from './Form'\n\nimport personService from '../Services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchString, setSearchString ] = useState('')\n  const addEntry = (event) => {\n    event.preventDefault()\n    if(newName === ''){\n      alert(\"You must enter a name\")\n      return\n    } \n    if(persons.map(a => a.name).includes(newName)){\n      if (confirm(`The name ${newName} is already present in the phonebook.\\nDo you want to update the number?`)){\n        personService\n          .updatePerson(persons.filter(a => a.name==newName))\n      }\n      return\n    }\n    let newPerson = {name: newName, number: newNumber};\n    personService\n      .addPerson(newPerson)\n      .then(retval => {\n        if(retval !== 0){\n          alert(\"An error occured while contacting the server.\\nPlease try again.\")\n        }\n      })\n    setPersons(persons.concat(newPerson))\n    setNewName('');\n    setNewNumber('');\n  }\n  const deleteEntry = (person) => () => {\n    if(window.confirm(`Really delete ${person.name}?`) !== true) return\n    personService\n      .deletePerson(person)\n      .then(retval => {\n        if(retval !== 0){\n          alert(\"An error occured while attempting to delete the entry.\\nThe entry might have already been deleted.\")\n        }\n      })\n      setPersons(persons.filter(currentPerson => currentPerson.name !== person.name))\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setSearchString(event.target.value)\n  }\n  \n  useEffect(() => {\n    personService\n      .getAll()\n        .then(data => {\n          setPersons(data)\n        })\n  },[])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h3>Add Entry</h3>\n      <Form onSubmit={addEntry} fields={\n        [\n          {description: 'name',value: newName,onChange: handleNameChange},\n          {description: 'number',value: newNumber,onChange: handleNumberChange}\n        ]\n      } />\n      <h3>Search</h3>\n      <input value={searchString} onChange={handleSearchChange}/>\n      <DisplayFilter persons={persons} searchString={searchString} />\n      <h3>Numbers</h3>\n      <DisplayPersons persons={persons} deletePerson={deleteEntry}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}