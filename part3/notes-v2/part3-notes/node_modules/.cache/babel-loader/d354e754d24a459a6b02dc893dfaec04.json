{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js\";\nimport React, { useState } from 'react';\nimport Country from './Country.js';\n\nconst DisplayCountries = ({\n  countries\n}) => {\n  const _useState = useState(-1),\n        _useState2 = _slicedToArray(_useState, 2),\n        shownCountry = _useState2[0],\n        setShownCountry = _useState2[1];\n\n  if (countries.length > 10) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Too Many matches, please refine your query\");\n  if (countries.length === 0) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Your search does not match any countries\");\n  if (countries.length === 1) return React.createElement(Country, {\n    country: countries[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, countries.map(country, index => {\n    return React.createElement(\"li\", {\n      key: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, country.name), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Show\"));\n  }));\n};\n\nexport default DisplayCountries;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js"],"names":["React","useState","Country","DisplayCountries","countries","shownCountry","setShownCountry","length","map","country","index","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA,oBACCH,QAAQ,CAAC,CAAC,CAAF,CADT;AAAA;AAAA,QAC/BI,YAD+B;AAAA,QAClBC,eADkB;;AAGtC,MAAGF,SAAS,CAACG,MAAV,GAAmB,EAAtB,EAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAP;AAC1B,MAAGH,SAAS,CAACG,MAAV,KAAqB,CAAxB,EAA2B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AAC3B,MAAGH,SAAS,CAACG,MAAV,KAAqB,CAAxB,EAA2B,OAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,SAAS,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAE3B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,SAAS,CAACI,GAAV,CAAcC,OAAd,EAAsBC,KAAK,IAAI;AAC3B,WACI;AAAI,MAAA,GAAG,EAAED,OAAO,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,OAAO,CAACE,IAAZ,CADJ,EAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAEF,OAAO,CAACE,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH,GAPD,CAFR,CADJ;AAcH,CArBD;;AAuBA,eAAeR,gBAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport Country from './Country.js'\n\nconst DisplayCountries = ({countries}) => {\n    const [shownCountry,setShownCountry] = useState(-1)\n\n    if(countries.length > 10) return <p>Too Many matches, please refine your query</p>\n    if(countries.length === 0) return <p>Your search does not match any countries</p>\n    if(countries.length === 1) return <Country country={countries[0]} />\n\n    return (\n        <ul>\n            {\n                countries.map(country,index => {\n                    return (\n                        <li key={country.name}>\n                            <p>{country.name}</p>\n                            <input type=\"checkbox\" name={country.name}>Show</input>\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default DisplayCountries"]},"metadata":{},"sourceType":"module"}