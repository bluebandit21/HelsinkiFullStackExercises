{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayWeather.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\n\nconst DisplayWeather = ({\n  country\n}) => {\n  const APIKEY = \"1e62eeb5997264304f629b59f8bbb34f\";\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        queryResponse = _useState2[0],\n        setQueryResponse = _useState2[1];\n\n  const queryWeather = country => {\n    console.log(country);\n    axios.request(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital},${country.cioc}&mode=html&units=imperial&appid=${APIKEY}`).then(request => {\n      console.log(request);\n      setQueryResponse(request.data);\n    }).catch(error => {\n      console.log(\"Errror in API call, \", error);\n      setQueryResponse(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Weather Query Failed\"));\n    });\n  };\n\n  queryWeather(country);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Weather in the Capital\"), queryResponse === '' ? React.createElement(React.Fragment, null) : renderHTML(queryResponse));\n};\n\nexport default DisplayWeather;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayWeather.js"],"names":["React","useState","axios","renderHTML","DisplayWeather","country","APIKEY","queryResponse","setQueryResponse","queryWeather","console","log","request","capital","cioc","then","data","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAClC,QAAMC,MAAM,GAAC,kCAAb;;AADkC,oBAGQL,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAG3BM,aAH2B;AAAA,QAGZC,gBAHY;;AAIlC,QAAMC,YAAY,GAAIJ,OAAD,IAAa;AAC9BK,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAH,IAAAA,KAAK,CACAU,OADL,CACc,qDAAoDP,OAAO,CAACQ,OAAQ,IAAGR,OAAO,CAACS,IAAK,mCAAkCR,MAAO,EAD3I,EAEKS,IAFL,CAEUH,OAAO,IAAI;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAJ,MAAAA,gBAAgB,CAACI,OAAO,CAACI,IAAT,CAAhB;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCO,KAAnC;AACAV,MAAAA,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAD,CAAhB;AACH,KATL;AAUH,GAZD;;AAaAC,EAAAA,YAAY,CAACJ,OAAD,CAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEKE,aAAa,KAAK,EAAlB,GAAuB,yCAAvB,GAA+BJ,UAAU,CAACI,aAAD,CAF9C,CADJ;AAMH,CAxBD;;AA0BA,eAAeH,cAAf","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport renderHTML from 'react-render-html';\n\nconst DisplayWeather = ({country}) => {\n    const APIKEY=\"1e62eeb5997264304f629b59f8bbb34f\"\n\n    const [queryResponse, setQueryResponse] = useState('')\n    const queryWeather = (country) => {\n        console.log(country)\n        axios\n            .request(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital},${country.cioc}&mode=html&units=imperial&appid=${APIKEY}`)\n            .then(request => {\n                console.log(request)\n                setQueryResponse(request.data)\n            })\n            .catch(error => {\n                console.log(\"Errror in API call, \",error)\n                setQueryResponse(<p>Weather Query Failed</p>)\n            })\n    }\n    queryWeather(country)\n    return (\n        <div>\n            <h3>Weather in the Capital</h3>\n            {queryResponse === '' ? <></> : renderHTML(queryResponse)}\n        </div>\n    )\n}\n\nexport default DisplayWeather"]},"metadata":{},"sourceType":"module"}