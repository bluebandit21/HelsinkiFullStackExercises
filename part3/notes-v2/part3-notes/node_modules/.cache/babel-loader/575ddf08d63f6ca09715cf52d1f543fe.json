{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js\";\nimport React, { useState } from 'react';\nimport Country from './Country.js';\n\nconst DisplayCountries = ({\n  countries\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        shownCountry = _useState2[0],\n        setShownCountry = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        oldCountries = _useState4[0],\n        setOldCountries = _useState4[1];\n\n  if (oldCountries !== countries) {\n    setShownCountry([]);\n    setOldCountries(countries);\n  }\n\n  if (countries.length > 10) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Too Many matches, please refine your query\");\n  if (countries.length === 0) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Your search does not match any countries\");\n  if (countries.length === 1) return React.createElement(Country, {\n    country: countries[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n\n  const handleButton = country => () => {\n    console.log(country);\n    setShownCountry(country);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, countries.map(country => {\n    return React.createElement(\"li\", {\n      key: country.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, country.name), React.createElement(\"button\", {\n      onClick: handleButton(country),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Show\"));\n  })), shownCountry.name ? React.createElement(Country, {\n    country: shownCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null));\n};\n\nexport default DisplayCountries;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayCountries.js"],"names":["React","useState","Country","DisplayCountries","countries","shownCountry","setShownCountry","oldCountries","setOldCountries","length","handleButton","country","console","log","map","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAAA,oBACCH,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAC/BI,YAD+B;AAAA,QAClBC,eADkB;;AAAA,qBAECL,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAE/BM,YAF+B;AAAA,QAElBC,eAFkB;;AAGtC,MAAGD,YAAY,KAAKH,SAApB,EAA8B;AAC1BE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,eAAe,CAACJ,SAAD,CAAf;AACH;;AACD,MAAGA,SAAS,CAACK,MAAV,GAAmB,EAAtB,EAA0B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAP;AAC1B,MAAGL,SAAS,CAACK,MAAV,KAAqB,CAAxB,EAA2B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AAC3B,MAAGL,SAAS,CAACK,MAAV,KAAqB,CAAxB,EAA2B,OAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEL,SAAS,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAE3B,QAAMM,YAAY,GAAIC,OAAD,IAAa,MAAM;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,IAAAA,eAAe,CAACK,OAAD,CAAf;AACH,GAHD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQP,SAAS,CAACU,GAAV,CAAcH,OAAO,IAAI;AACrB,WACI;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACI,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,OAAO,CAACI,IAAZ,CADJ,EAEI;AAAQ,MAAA,OAAO,EAAEL,YAAY,CAACC,OAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH,GAPD,CAFR,CADJ,EAcQN,YAAY,CAACU,IAAb,GAAoB,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEV,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,GAAyD,yCAdjE,CADJ;AAmBH,CAlCD;;AAoCA,eAAeF,gBAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport Country from './Country.js'\n\nconst DisplayCountries = ({countries}) => {\n    const [shownCountry,setShownCountry] = useState([])\n    const [oldCountries,setOldCountries] = useState([])\n    if(oldCountries !== countries){\n        setShownCountry([])\n        setOldCountries(countries)\n    }\n    if(countries.length > 10) return <p>Too Many matches, please refine your query</p>\n    if(countries.length === 0) return <p>Your search does not match any countries</p>\n    if(countries.length === 1) return <Country country={countries[0]} />\n    \n    const handleButton = (country) => () => {\n        console.log(country)\n        setShownCountry(country)\n    }\n    return (\n        <div>\n            <ul>\n                {\n                    countries.map(country => {\n                        return (\n                            <li key={country.name}>\n                                <p>{country.name}</p>\n                                <button onClick={handleButton(country)}>Show</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            {\n                shownCountry.name ? <Country country={shownCountry} /> : <></>\n            }\n        </div>\n    )\n}\n\nexport default DisplayCountries"]},"metadata":{},"sourceType":"module"}