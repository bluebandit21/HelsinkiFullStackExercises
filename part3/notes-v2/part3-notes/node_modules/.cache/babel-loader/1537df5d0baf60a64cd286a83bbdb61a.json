{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/index.js\";\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport \"./Components/DisplayPersons\";\nimport \"./Components/DisplayFilter\";\nimport \"./Components/Form\";\nimport DisplayPersons from './Components/DisplayPersons';\nimport DisplayFilter from './Components/DisplayFilter';\nimport Form from './Components/Form';\n\nconst App = () => {\n  const _useState = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNewNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchString = _useState8[0],\n        setSearchString = _useState8[1];\n\n  const addEntry = event => {\n    event.preventDefault();\n\n    if (persons.map(a => a.name).includes(newName)) {\n      alert(\"The name \".concat(newName, \" is already present in the phonebook\"));\n      return;\n    }\n\n    let newPerson = {\n      name: newName,\n      number: newNumber\n    };\n    setPersons(persons.concat(newPerson));\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setSearchString(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add Entry\"), React.createElement(Form, {\n    onSubmit: addEntry,\n    fields: [{\n      description: \"name\",\n      value: newName,\n      onChange: handleNameChange\n    }, {\n      description: \"number\",\n      value: newNumber,\n      onChange: handleNumberChange\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    value: searchString,\n    onChange: handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(DisplayFilter, {\n    persons: persons,\n    searchString: searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(DisplayPersons, {\n    persons: persons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/phonebook/src/index.js"],"names":["ReactDOM","React","useState","DisplayPersons","DisplayFilter","Form","App","name","number","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchString","setSearchString","addEntry","event","preventDefault","map","a","includes","alert","newPerson","concat","handleNameChange","target","value","handleNumberChange","handleSearchChange","description","onChange","render","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom'\nimport React, { useState } from 'react'\n\nimport \"./Components/DisplayPersons\"\nimport \"./Components/DisplayFilter\"\nimport \"./Components/Form\"\nimport DisplayPersons from './Components/DisplayPersons'\nimport DisplayFilter from './Components/DisplayFilter'\nimport Form from './Components/Form'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchString, setSearchString ] = useState('')\n  const addEntry = (event) => {\n    event.preventDefault()\n    if(persons.map(a => a.name).includes(newName)){\n      alert(`The name ${newName} is already present in the phonebook`)\n      return\n    }\n    let newPerson = {name: newName, number: newNumber};\n    setPersons(persons.concat(newPerson))\n    setNewName('');\n    setNewNumber('');\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setSearchString(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h3>Add Entry</h3>\n      <Form onSubmit={addEntry} fields={[\n        {description: \"name\",value: newName,onChange: handleNameChange},\n        {description: \"number\",value: newNumber,onChange: handleNumberChange}\n      ]}/>\n      <h3>Search</h3>\n      <input value={searchString} onChange={handleSearchChange}/>\n      <DisplayFilter persons={persons} searchString={searchString} />\n      <h3>Numbers</h3>\n      <DisplayPersons persons={persons} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}