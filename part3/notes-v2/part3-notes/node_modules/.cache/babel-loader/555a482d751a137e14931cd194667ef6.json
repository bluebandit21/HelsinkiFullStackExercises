{"ast":null,"code":"import _slicedToArray from \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayWeather.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport renderHTML from 'react-render-html';\n\nconst DisplayWeather = ({\n  country\n}) => {\n  const OPENWEATHERMAP_API_KEY = \"1e62eeb5997264304f629b59f8bbb34f\";\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        queryResponse = _useState2[0],\n        setQueryResponse = _useState2[1];\n\n  const queryWeather = country => {\n    axios.request(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital},${country.cioc}&mode=html&units=imperial&appid=${OPENWEATHERMAP_API_KEY}`).then(request => {\n      setQueryResponse(request.data);\n    }).catch(error => {\n      console.log(\"Errror in API call, \", error);\n      setQueryResponse(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Weather Query Failed\"));\n    });\n  };\n\n  queryWeather(country);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Weather in \", country.capital, \":\"), queryResponse === '' ? React.createElement(React.Fragment, null) : renderHTML(queryResponse));\n};\n\nexport default DisplayWeather;","map":{"version":3,"sources":["/Users/plotner/git/HelsinkiFullStackExercises/part2/countries/src/Components/DisplayWeather.js"],"names":["React","useState","axios","renderHTML","DisplayWeather","country","OPENWEATHERMAP_API_KEY","queryResponse","setQueryResponse","queryWeather","request","capital","cioc","then","data","catch","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAClC,QAAMC,sBAAsB,GAAC,kCAA7B;;AADkC,oBAEQL,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAE3BM,aAF2B;AAAA,QAEZC,gBAFY;;AAGlC,QAAMC,YAAY,GAAIJ,OAAD,IAAa;AAC9BH,IAAAA,KAAK,CACAQ,OADL,CACc,qDAAoDL,OAAO,CAACM,OAAQ,IAAGN,OAAO,CAACO,IAAK,mCAAkCN,sBAAuB,EAD3J,EAEKO,IAFL,CAEUH,OAAO,IAAI;AACbF,MAAAA,gBAAgB,CAACE,OAAO,CAACI,IAAT,CAAhB;AACH,KAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCF,KAAnC;AACAR,MAAAA,gBAAgB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAD,CAAhB;AACH,KARL;AASH,GAVD;;AAWAC,EAAAA,YAAY,CAACJ,OAAD,CAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBA,OAAO,CAACM,OAAxB,MADJ,EAEKJ,aAAa,KAAK,EAAlB,GAAuB,yCAAvB,GAA+BJ,UAAU,CAACI,aAAD,CAF9C,CADJ;AAMH,CArBD;;AAuBA,eAAeH,cAAf","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport renderHTML from 'react-render-html';\n\nconst DisplayWeather = ({country}) => {\n    const OPENWEATHERMAP_API_KEY=\"1e62eeb5997264304f629b59f8bbb34f\"\n    const [queryResponse, setQueryResponse] = useState('')\n    const queryWeather = (country) => {\n        axios\n            .request(`https://api.openweathermap.org/data/2.5/weather?q=${country.capital},${country.cioc}&mode=html&units=imperial&appid=${OPENWEATHERMAP_API_KEY}`)\n            .then(request => {\n                setQueryResponse(request.data)\n            })\n            .catch(error => {\n                console.log(\"Errror in API call, \",error)\n                setQueryResponse(<p>Weather Query Failed</p>)\n            })\n    }\n    queryWeather(country)\n    return (\n        <div>\n            <h3>Weather in {country.capital}:</h3>\n            {queryResponse === '' ? <></> : renderHTML(queryResponse)}\n        </div>\n    )\n}\n\nexport default DisplayWeather"]},"metadata":{},"sourceType":"module"}